apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    component: backend
  name: hunt-backend
spec:
  replicas: 3
  selector:
    deploymentconfig: hunt-backend
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        deploymentconfig: hunt-backend
        app: pod-hunt
    spec:
      containers:
        - image: ''
          imagePullPolicy: Always
          name: hunt-backend
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: ripper
      serviceAccountName: ripper
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: "ImageChange"
    imageChangeParams:
      automatic: true
      from:
        kind: "ImageStreamTag"
        name: "hunt-backend:latest"
      containerNames:
        - "hunt-backend"
  - type: ConfigChange
